<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Academic on Sultan (0x5bjorn)</title><link>https://0x5bjorn.github.io/tags/academic/</link><description>Recent content in Academic on Sultan (0x5bjorn)</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 03 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://0x5bjorn.github.io/tags/academic/index.xml" rel="self" type="application/rss+xml"/><item><title>UMS</title><link>https://0x5bjorn.github.io/posts/ums/</link><pubDate>Mon, 03 Jul 2023 00:00:00 +0000</pubDate><guid>https://0x5bjorn.github.io/posts/ums/</guid><description>
&lt;h2 id="aosv-final-project-report">AOSV Final Project Report&lt;/h2>
&lt;p>&lt;em>A.Y. 2020/2021&lt;/em>&lt;br>
&lt;strong>&lt;a href="https://github.com/0x5bjorn/AOSV-project">repository&lt;/a>&lt;/strong>&lt;/p>
&lt;!-- Author(s): Sultan Umabraev (1954544) -->
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>The goal of the project was to implement &lt;strong>User Mode thread Scheduling&lt;/strong> mechanism for the Linux distribution, inspired by the &lt;strong>User-mode scheduling (UMS)&lt;/strong> implementation available in the Windows kernel [1]. UMS is a mechanism that allows applications/programs in the user mode to schedule their own threads without involving the kernel/system scheduler. The main goal and advantage is that thread switching in user mode is &amp;quot;&lt;em>more efficient than thread pools for managing large numbers of short-duration work items that require few system calls.&lt;/em>&amp;quot; [2].&lt;/p></description></item></channel></rss>